#!/bin/bash

set -ex

# Don't choke if projects or targets have spaces in the name
OLDIFS=$IFS
IFS=$(echo "")

IAP_SDK_FRAMEWORKS=("SquareInAppPaymentsSDK" "SquareBuyerVerificationSDK")
MAIN_FRAMEWORKS_DIR="$BUILT_PRODUCTS_DIR/$FRAMEWORKS_FOLDER_PATH"

# Unpack frameworks
for FRAMEWORK_NAME in "${IAP_SDK_FRAMEWORKS[@]}"; do
  FRAMEWORK_PATH="$FRAMEWORK_NAME.framework/Frameworks"
  MAIN_NESTED_FRAMEWORKS_DIR="$MAIN_FRAMEWORKS_DIR/$FRAMEWORK_PATH"

  if [ -d "$MAIN_NESTED_FRAMEWORKS_DIR" ]; then
    # Handle all nested frameworks that are fat frameworks
    find "$MAIN_NESTED_FRAMEWORKS_DIR" -name '*.framework' ! -path '*.xcframework/*' -type d | while read -r FRAMEWORK; do
      rm -rf "$MAIN_FRAMEWORKS_DIR/$(basename "$FRAMEWORK")/"
      mv -f "$FRAMEWORK/" "$MAIN_FRAMEWORKS_DIR"
    done

    # Handle all nested frameworks that are xcframeworks
    find "$MAIN_NESTED_FRAMEWORKS_DIR" -name '*.xcframework' -type d | while read -r XCFRAMEWORK; do

      # $SDK_NAMES is an environment variable set by the xcodebuild process
      # Possible values can be seen by running `xcodebuild -showsdks`
      for SDK in $SDK_NAMES; do

        # Only allow iphoneos and iphonesimulator SDKs
        if ! [[ $SDK =~ .*iphone.* ]]; then
          echo "Unable to setup $(basename "$XCFRAMEWORK"). Only building against iOS SDKs is supported at the moment."
          exit 1
        fi

        FIND_COMMAND="find '$XCFRAMEWORK' -name '*.framework' -type d"
        if [[ $SDK =~ .*simulator.* ]]; then
          FIND_COMMAND="$FIND_COMMAND -path '*-simulator/*'"
        else
          FIND_COMMAND="$FIND_COMMAND ! -path '*-simulator/*'"
        fi

        eval "$FIND_COMMAND" | while read -r ARCH_FRAMEWORK; do
          rm -rf "$MAIN_FRAMEWORKS_DIR/$(basename "$ARCH_FRAMEWORK")/"
          mv -f "$ARCH_FRAMEWORK/" "$MAIN_FRAMEWORKS_DIR"
          rm -rf "$(dirname "$ARCH_FRAMEWORK")"
        done
      done

      # Cleanup unused SDK slices of xcframework
      rm -rf "$XCFRAMEWORK"
    done

    # If the nested framework directory does not contain any further framework binaries then clean it up
    if [ -z "$(find "$MAIN_NESTED_FRAMEWORKS_DIR" -name "*.framework" -type d)" ]; then
      rm -rf "$MAIN_NESTED_FRAMEWORKS_DIR"
    fi
  fi
done

IFS=$OLDIFS

# Don't choke if projects or targets have spaces in the name
OLDIFS=$IFS
IFS=$(echo "")

# Delete this script if archiving
if [ "$ACTION" = "install" ]; then
  rm -- "$0"
fi

# Codesign
find "${CODESIGNING_FOLDER_PATH}/Frameworks" -name "*.framework" | while read -r FILENAME; do
  codesign --force --sign "${EXPANDED_CODE_SIGN_IDENTITY}" "$FILENAME"
  if [ $? != 0 ]; then
    echo "error: Code signing failed."
    exit 1
  fi
done

IFS=$OLDIFS